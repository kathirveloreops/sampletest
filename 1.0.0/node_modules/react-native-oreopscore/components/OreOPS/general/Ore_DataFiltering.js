import React, { Component } from 'react';

import jslinq from "jslinq";
const OreDataFiltering = {
   // Filtering Data
   filterdata(dataobject, filtercolumn, filteroperator, filtervalue, lsretunval) {
      var queryObj = jslinq(dataobject);
      var result;
      if (filteroperator == "equalto") {
         result = queryObj
            .where(function (el) {
               return el[filtercolumn] == filtervalue;
            })
            .toList();
      }
      if (filteroperator == "notequalto") {
         result = queryObj
            .where(function (el) {
               return el[filtercolumn] != filtervalue;
            })
            .toList();
      }
      if (filteroperator == "greterthan") {
         result = queryObj
            .where(function (el) {
               return el[filtercolumn] > filtervalue;
            })
            .toList();
      }
      if (filteroperator == "lessthan") {
         result = queryObj
            .where(function (el) {
               return el[filtercolumn] < filtervalue;
            })
            .toList();
      }
      if (lsretunval != undefined && lsretunval != "") {

         result = result[0][lsretunval];
      }
      return result;
   },

   // Getting count of the data object
   count(dataobject) {
      var queryObj = jslinq(dataobject);
      var result = queryObj
         .count();
      return result;
   },

   //remove particular object from data 
   remove(dataobject, filtercolumn, filtervalue) {
      var queryObj = jslinq(dataobject);
      var elementToRemove = queryObj
         .singleOrDefault(function (el) {
            return el[filtercolumn] == filtervalue;
         });
      var result = queryObj
         .remove(elementToRemove)
         .toList();
      return result;
   },

   // Getting sum of the data
   sum(dataobject, filtercolumn, filtervalue) {
      var queryObj = jslinq(dataobject);
      var result = queryObj
         .sum(function (el) {
            return el[filtercolumn];
         });
      return result;
   },

   // average of the data
   average(dataobject, filtercolumn, filtervalue) {
      var result = jslinq(dataobject)
         .average(function (x) {
            return x[filtercolumn];
         });
      return result;
   }

}
export default OreDataFiltering;


